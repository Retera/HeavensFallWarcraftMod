//===========================================================================
// 
// The Zear
// 
//   Warcraft III AI script
//   Generated by the Warcraft III World Editor
//   Date: Sun Jun 20 00:32:46 2010
// 
//===========================================================================

//***************************************************************************
//*
//*  Global Variables
//*
//***************************************************************************

globals
    integer                 attackWave                 = 1
    integer                 nextDelay                  = 0
    integer                 awGold                     = 0
    integer                 awWood                     = 0

    // Conditions
    boolean                 gCond_Extra_Money          = false
    boolean                 gCond_Gold_Mine_Creeps_Dont_Needa_Killin = false
    boolean                 gCond_Exp_1                = false
    boolean                 gCond_Exp_2                = false
    boolean                 gCond_StorageWagon1        = false
    boolean                 gCond_TrainingWagon1       = false
    boolean                 gCond_Fortifier1           = false
    boolean                 gCond_Fortifier2           = false
    boolean                 gCond_Fortifier3           = false
    boolean                 gCond_Fortifier4           = false
    boolean                 gCond_Fortifier5           = false
    boolean                 gCond_Fortifier7           = false
    boolean                 gCond_Fortifier6           = false
    boolean                 gCond_Fortifier8           = false
    boolean                 gCond_Fortifier9           = false
    boolean                 gCond_Fortifier10          = false
    boolean                 gCond_Fortifier11          = false
    boolean                 gCond_Fortifier12          = false
    boolean                 gCond_Fortifier13          = false
    boolean                 gCond_Fortifier14          = false
    boolean                 gCond_Fortifier15          = false
    boolean                 gCond_Fortifier16          = false
    boolean                 gCond_Fortifier17          = false
    boolean                 gCond_Fortifier18          = false
    boolean                 gCond_Fortifier19          = false
    boolean                 gCond_Fortifier20          = false
    boolean                 gCond_Zealot1              = false
    boolean                 gCond_Zealot2              = false
    boolean                 gCond_Zealot3              = false
    boolean                 gCond_Zealot4              = false
    boolean                 gCond_Zealot5              = false
    boolean                 gCond_Zealot6              = false
    boolean                 gCond_BladeThrower1        = false
    boolean                 gCond_BladeThrower2        = false
    boolean                 gCond_BladeThrower3        = false
    boolean                 gCond_BladeThrower4        = false
    boolean                 gCond_Exp_3                = false
    boolean                 gCond_OgreMauler1          = false
    boolean                 gCond_OgreMauler2          = false
    boolean                 gCond_OgreMauler3          = false
    boolean                 gCond_OgreMauler4          = false
    boolean                 gCond_OgreSlinger1         = false
    boolean                 gCond_OgreSlinger2         = false
    boolean                 gCond_OgreSlinger3         = false
    boolean                 gCond_OgreSlinger4         = false
    boolean                 gCond_ForgottenOne1        = false
    boolean                 gCond_ForgottenOne2        = false
    boolean                 gCond_ForgottenOne3        = false
    boolean                 gCond_ForgottenOne4        = false
    boolean                 gCond_BloodMagi1           = false
    boolean                 gCond_BloodMagi2           = false
    boolean                 gCond_BloodMagi3           = false
    boolean                 gCond_BloodMagi4           = false
    boolean                 gCond_UnderAttack          = false
    boolean                 gCond_SpellShifter1        = false
    boolean                 gCond_SpellShifter2        = false
    boolean                 gCond_SpellShifter3        = false
    boolean                 gCond_SpellShifter4        = false
    boolean                 bringWar                   = false
endglobals

//***************************************************************************
//*
//*  Utility Functions
//*
//***************************************************************************

//===========================================================================
function CheckLastCommand takes boolean pop returns integer
    local integer cmd = GetLastCommand()
    if (pop) then
        call PopLastCommand(  )
    endif
    return cmd
endfunction

//===========================================================================
function CheckLastCommandData takes boolean pop returns integer
    local integer data = GetLastData()
    if (pop) then
        call PopLastCommand(  )
    endif
    return data
endfunction

//===========================================================================
function TotalFoodProduced takes nothing returns integer
    return GetPlayerState(ai_player,PLAYER_STATE_RESOURCE_FOOD_CAP)
endfunction

//===========================================================================
function ExpansionNeeded takes nothing returns boolean
    return take_exp
endfunction

//===========================================================================
function BuildExpansion takes integer hallID, integer mineID returns nothing
    if (HallsCompleted(hallID)) then
        call SetBuildExpa( TownCount(hallID) + 1, mineID )
    endif
endfunction

//===========================================================================
function CurrentAttackWave takes nothing returns integer
    return attackWave
endfunction

//===========================================================================
function ResetAttackUnits takes nothing returns nothing
    set awGold = 0
    set awWood = 0
    call InitAssaultGroup(  )
endfunction

//===========================================================================
function AddAttackUnit takes integer minQty, integer maxQty, integer unitID returns nothing
    // Track attacking gold workers
    if (unitID == 'h01D') then
        set awGold = awGold + minQty
    endif

    // Track attacking wood workers
    if (unitID == 'h01D') then
        set awWood = awWood + minQty
    endif

    call SetAssaultGroup( minQty, maxQty, unitID )
endfunction

//***************************************************************************
//*
//*  Basic Options
//*
//***************************************************************************

//===========================================================================
function InitOptions takes nothing returns nothing
    call SetMeleeAI(  )
    call SetDefendPlayer( true )
    call SetRandomPaths( false )
    call SetTargetHeroes( true )
    call SetPeonsRepair( true )
    call SetHeroesFlee( true )
    call SetHeroesBuyItems( true )
    call SetUnitsFlee( true )
    call SetGroupsFlee( true )
    call SetWatchMegaTargets( true )
    call SetIgnoreInjured( true )
    call SetHeroesTakeItems( true )
    call SetSlowChopping( false )
    call SetCaptainChanges( true )
    call SetSmartArtillery( true )
endfunction

//***************************************************************************
//*
//*  Conditions
//*
//***************************************************************************

//===========================================================================
// Updates the values of all preset conditions
//===========================================================================
function UpdateConditions takes nothing returns nothing
    set gCond_Extra_Money = ( GetGold(  ) > 250 )
    set gCond_Gold_Mine_Creeps_Dont_Needa_Killin = ( ExpansionNeeded(  ) == false )
    set gCond_Exp_1 = ( TownHasMine( 2 ) == true )
    set gCond_Exp_2 = ( TownHasMine( 3 ) == true )
    set gCond_StorageWagon1 = true//( GetUnitCountDone( 'e01F' ) < 1 )
    set gCond_TrainingWagon1 = ( ( GetUnitCount( 'e01G' ) + GetUnitCount( 'e00G' ) ) < 1 )
    set gCond_Fortifier1 = ( ( GetUnitCount( 'h01D' ) + GetUnitCount( 'h02S' ) ) < 1 )
    set gCond_Fortifier2 = ( ( GetUnitCount( 'h01D' ) + GetUnitCount( 'h02S' ) ) < 2 )
    set gCond_Fortifier3 = ( ( GetUnitCount( 'h01D' ) + GetUnitCount( 'h02S' ) ) < 3 )
    set gCond_Fortifier4 = ( ( GetUnitCount( 'h01D' ) + GetUnitCount( 'h02S' ) ) < 4 )
    set gCond_Fortifier5 = ( ( GetUnitCount( 'h01D' ) + GetUnitCount( 'h02S' ) ) < 5 )
    set gCond_Fortifier7 = ( ( GetUnitCount( 'h01D' ) + GetUnitCount( 'h02S' ) ) < 7 )
    set gCond_Fortifier6 = ( ( GetUnitCount( 'h01D' ) + GetUnitCount( 'h02S' ) ) < 6 )
    set gCond_Fortifier8 = ( ( GetUnitCount( 'h01D' ) + GetUnitCount( 'h02S' ) ) < 8 )
    set gCond_Fortifier9 = ( ( GetUnitCount( 'h01D' ) + GetUnitCount( 'h02S' ) ) < 9 )
    set gCond_Fortifier10 = ( ( GetUnitCount( 'h01D' ) + GetUnitCount( 'h02S' ) ) < 10 )
    set gCond_Fortifier11 = ( ( GetUnitCount( 'h01D' ) + GetUnitCount( 'h02S' ) ) < 11 )
    set gCond_Fortifier12 = ( ( GetUnitCount( 'h01D' ) + GetUnitCount( 'h02S' ) ) < 12 )
    set gCond_Fortifier13 = ( ( GetUnitCount( 'h01D' ) + GetUnitCount( 'h02S' ) ) < 13 )
    set gCond_Fortifier14 = ( ( GetUnitCount( 'h01D' ) + GetUnitCount( 'h02S' ) ) < 14 )
    set gCond_Fortifier15 = ( ( GetUnitCount( 'h01D' ) + GetUnitCount( 'h02S' ) ) < 15 )
    set gCond_Fortifier16 = ( ( GetUnitCount( 'h01D' ) + GetUnitCount( 'h02S' ) ) < 16 )
    set gCond_Fortifier17 = ( ( GetUnitCount( 'h01D' ) + GetUnitCount( 'h02S' ) ) < 17 )
    set gCond_Fortifier18 = ( ( GetUnitCount( 'h01D' ) + GetUnitCount( 'h02S' ) ) < 18 )
    set gCond_Fortifier19 = ( ( GetUnitCount( 'h01D' ) + GetUnitCount( 'h02S' ) ) < 19 )
    set gCond_Fortifier20 = ( ( GetUnitCount( 'h01D' ) + GetUnitCount( 'h02S' ) ) < 20 )
    set gCond_Zealot1 = ( ( GetUnitCount( 'n00A' ) + GetUnitCount( 'n002' ) ) < 1 )
    set gCond_Zealot2 = ( ( GetUnitCount( 'n00A' ) + GetUnitCount( 'n002' ) ) < 2 )
    set gCond_Zealot3 = ( ( GetUnitCount( 'n00A' ) + GetUnitCount( 'n002' ) ) < 3 )
    set gCond_Zealot4 = ( ( GetUnitCount( 'n00A' ) + GetUnitCount( 'n002' ) ) < 4 )
    set gCond_Zealot5 = ( ( GetUnitCount( 'n00A' ) + GetUnitCount( 'n002' ) ) < 5 )
    set gCond_Zealot6 = ( ( GetUnitCount( 'n00A' ) + GetUnitCount( 'n002' ) ) < 6 )
    set gCond_BladeThrower1 = ( ( GetUnitCount( 'o00X' ) + GetUnitCount( 'o01F' ) ) < 1 )
    set gCond_BladeThrower2 = ( ( GetUnitCount( 'o00X' ) + GetUnitCount( 'o01F' ) ) < 2 )
    set gCond_BladeThrower3 = ( ( GetUnitCount( 'o00X' ) + GetUnitCount( 'o01F' ) ) < 3 )
    set gCond_BladeThrower4 = ( ( GetUnitCount( 'o00X' ) + GetUnitCount( 'o01F' ) ) < 4 )
    set gCond_Exp_3 = ( TownHasMine( 4 ) == true )
    set gCond_OgreMauler1 = ( ( GetUnitCount( 'n00C' ) + GetUnitCount( 'n026' ) ) < 1 )
    set gCond_OgreMauler2 = ( ( GetUnitCount( 'n00C' ) + GetUnitCount( 'n026' ) ) < 2 )
    set gCond_OgreMauler3 = ( ( GetUnitCount( 'n00C' ) + GetUnitCount( 'n026' ) ) < 3 )
    set gCond_OgreMauler4 = ( ( GetUnitCount( 'n00C' ) + GetUnitCount( 'n026' ) ) < 4 )
    set gCond_OgreSlinger1 = ( ( GetUnitCount( 'n00D' ) + GetUnitCount( 'n02A' ) ) < 1 )
    set gCond_OgreSlinger2 = ( ( GetUnitCount( 'n00D' ) + GetUnitCount( 'n02A' ) ) < 2 )
    set gCond_OgreSlinger3 = ( ( GetUnitCount( 'n00D' ) + GetUnitCount( 'n02A' ) ) < 3 )
    set gCond_OgreSlinger4 = ( ( GetUnitCount( 'n00D' ) + GetUnitCount( 'n02A' ) ) < 4 )
    set gCond_ForgottenOne1 = ( ( GetUnitCount( 'n00B' ) + GetUnitCount( 'n029' ) ) < 1 )
    set gCond_ForgottenOne2 = ( ( GetUnitCount( 'n00B' ) + GetUnitCount( 'n029' ) ) < 2 )
    set gCond_ForgottenOne3 = ( ( GetUnitCount( 'n00B' ) + GetUnitCount( 'n029' ) ) < 3 )
    set gCond_ForgottenOne4 = ( ( GetUnitCount( 'n00B' ) + GetUnitCount( 'n029' ) ) < 4 )
    set gCond_BloodMagi1 = ( ( GetUnitCount( 'n00F' ) + GetUnitCount( 'n024' ) ) < 1 )
    set gCond_BloodMagi2 = ( ( GetUnitCount( 'n00F' ) + GetUnitCount( 'n024' ) ) < 2 )
    set gCond_BloodMagi3 = ( ( GetUnitCount( 'n00F' ) + GetUnitCount( 'n024' ) ) < 3 )
    set gCond_BloodMagi4 = ( ( GetUnitCount( 'n00F' ) + GetUnitCount( 'n024' ) ) < 4 )
    set gCond_UnderAttack = ( TownThreatened(  ) == true )
    set gCond_SpellShifter1 = ( ( GetUnitCount( 'n00G' ) + GetUnitCount( 'n025' ) ) < 1 )
    set gCond_SpellShifter2 = ( ( GetUnitCount( 'n00G' ) + GetUnitCount( 'n025' ) ) < 2 )
    set gCond_SpellShifter3 = ( ( GetUnitCount( 'n00G' ) + GetUnitCount( 'n025' ) ) < 3 )
    set gCond_SpellShifter4 = ( ( GetUnitCount( 'n00G' ) + GetUnitCount( 'n025' ) ) < 4 )
    if( GetLastCommand() == 5 ) then
    set bringWar = true
    endif
endfunction

//***************************************************************************
//*
//*  Heroes
//*
//***************************************************************************

//===========================================================================
// Stores hero ID and skills
//===========================================================================
function SetHero takes integer order, integer heroid returns nothing
    if (order == 1) then
        set hero_id = heroid
        if (heroid == 'N00Y') then
            set skills1[ 1] = 'A0HW'
            set skills1[ 2] = 'A0HZ'
            set skills1[ 3] = 'A0HY'
            set skills1[ 4] = 'A0HW'
            set skills1[ 5] = 'A0HZ'
            set skills1[ 6] = 'A0I1'
            set skills1[ 7] = 'A0HY'
            set skills1[ 8] = 'A0HW'
            set skills1[ 9] = 'A0HZ'
            set skills1[10] = 'A0HY'
        elseif (heroid == 'N011') then
            set skills1[ 1] = 'A0HH'
            set skills1[ 2] = 'A0HM'
            set skills1[ 3] = 'A0HQ'
            set skills1[ 4] = 'A0HH'
            set skills1[ 5] = 'A0HM'
            set skills1[ 6] = 'A0HV'
            set skills1[ 7] = 'A0HQ'
            set skills1[ 8] = 'A0HH'
            set skills1[ 9] = 'A0HM'
            set skills1[10] = 'A0HQ'
        elseif (heroid == 'N02B') then
            set skills1[ 1] = 'A03J'
            set skills1[ 2] = 'A0I9'
            set skills1[ 3] = 'A03I'
            set skills1[ 4] = 'A03J'
            set skills1[ 5] = 'A0I9'
            set skills1[ 6] = 'A03K'
            set skills1[ 7] = 'A03I'
            set skills1[ 8] = 'A03J'
            set skills1[ 9] = 'A0I9'
            set skills1[10] = 'A03I'
        endif
    elseif (order == 2) then
        set hero_id2 = heroid
        if (heroid == 'N00Y') then
            set skills2[ 1] = 'A0HW'
            set skills2[ 2] = 'A0HZ'
            set skills2[ 3] = 'A0HY'
            set skills2[ 4] = 'A0HW'
            set skills2[ 5] = 'A0HZ'
            set skills2[ 6] = 'A0I1'
            set skills2[ 7] = 'A0HY'
            set skills2[ 8] = 'A0HW'
            set skills2[ 9] = 'A0HZ'
            set skills2[10] = 'A0HY'
        elseif (heroid == 'N011') then
            set skills2[ 1] = 'A0HH'
            set skills2[ 2] = 'A0HM'
            set skills2[ 3] = 'A0HQ'
            set skills2[ 4] = 'A0HH'
            set skills2[ 5] = 'A0HM'
            set skills2[ 6] = 'A0HV'
            set skills2[ 7] = 'A0HQ'
            set skills2[ 8] = 'A0HH'
            set skills2[ 9] = 'A0HM'
            set skills2[10] = 'A0HQ'
        elseif (heroid == 'N02B') then
            set skills2[ 1] = 'A03J'
            set skills2[ 2] = 'A0I9'
            set skills2[ 3] = 'A03I'
            set skills2[ 4] = 'A03J'
            set skills2[ 5] = 'A0I9'
            set skills2[ 6] = 'A03K'
            set skills2[ 7] = 'A03I'
            set skills2[ 8] = 'A03J'
            set skills2[ 9] = 'A0I9'
            set skills2[10] = 'A03I'
        endif
    elseif (order == 3) then
        set hero_id3 = heroid
        if (heroid == 'N00Y') then
            set skills3[ 1] = 'A0HW'
            set skills3[ 2] = 'A0HZ'
            set skills3[ 3] = 'A0HY'
            set skills3[ 4] = 'A0HW'
            set skills3[ 5] = 'A0HZ'
            set skills3[ 6] = 'A0I1'
            set skills3[ 7] = 'A0HY'
            set skills3[ 8] = 'A0HW'
            set skills3[ 9] = 'A0HZ'
            set skills3[10] = 'A0HY'
        elseif (heroid == 'N011') then
            set skills3[ 1] = 'A0HH'
            set skills3[ 2] = 'A0HM'
            set skills3[ 3] = 'A0HQ'
            set skills3[ 4] = 'A0HH'
            set skills3[ 5] = 'A0HM'
            set skills3[ 6] = 'A0HV'
            set skills3[ 7] = 'A0HQ'
            set skills3[ 8] = 'A0HH'
            set skills3[ 9] = 'A0HM'
            set skills3[10] = 'A0HQ'
        elseif (heroid == 'N02B') then
            set skills3[ 1] = 'A03J'
            set skills3[ 2] = 'A0I9'
            set skills3[ 3] = 'A03I'
            set skills3[ 4] = 'A03J'
            set skills3[ 5] = 'A0I9'
            set skills3[ 6] = 'A03K'
            set skills3[ 7] = 'A03I'
            set skills3[ 8] = 'A03J'
            set skills3[ 9] = 'A0I9'
            set skills3[10] = 'A03I'
        endif
    endif
endfunction

//===========================================================================
// Selects hero IDs for three possible heroes
//===========================================================================
function SelectHeroes takes nothing returns nothing
    local integer roll = GetRandomInt(1,100)
    if (roll <= 17) then
        call SetHero( 1, 'N00Y' )
        call SetHero( 2, 'N011' )
        call SetHero( 3, 'N02B' )
    elseif (roll <= 34) then
        call SetHero( 1, 'N00Y' )
        call SetHero( 2, 'N02B' )
        call SetHero( 3, 'N011' )
    elseif (roll <= 51) then
        call SetHero( 1, 'N011' )
        call SetHero( 2, 'N00Y' )
        call SetHero( 3, 'N02B' )
    elseif (roll <= 67) then
        call SetHero( 1, 'N011' )
        call SetHero( 2, 'N02B' )
        call SetHero( 3, 'N00Y' )
    elseif (roll <= 84) then
        call SetHero( 1, 'N02B' )
        call SetHero( 2, 'N00Y' )
        call SetHero( 3, 'N011' )
    else
        call SetHero( 1, 'N02B' )
        call SetHero( 2, 'N011' )
        call SetHero( 3, 'N00Y' )
    endif
endfunction

//===========================================================================
// Returns the hero skill for the given hero and level
//===========================================================================
function ChooseHeroSkill takes nothing returns integer
    local integer curHero = GetHeroId()
    local integer level = GetHeroLevelAI()

    if (level > max_hero_level) then
        set max_hero_level = level
    endif

    if (curHero == hero_id) then
        return skills1[level]
    elseif (curHero == hero_id2) then
        return skills2[level]
    elseif (curHero == hero_id3) then
        return skills3[level]
    endif
    return 0
endfunction

//***************************************************************************
//*
//*  Building and Harvesting
//*
//***************************************************************************

//===========================================================================
// Specifies building priorities for workers
//===========================================================================
function BuildPriorities takes nothing returns nothing
    local integer mine = TownWithMine()
    if (( GetUnitCount( 'h014' ) == 0 )) then
    call SetBuildAll( BUILD_UNIT, 1, 'h013', -1 )
    endif
    if (gCond_Fortifier1) then
        call SetBuildAll( BUILD_UNIT, 1, 'h01D', -1 )
    endif
    if (gCond_Fortifier2) then
        call SetBuildAll( BUILD_UNIT, 2, 'h01D', -1 )
    endif
    if (gCond_Fortifier3) then
        call SetBuildAll( BUILD_UNIT, 3, 'h01D', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'e00F', -1 )
    if (gCond_Fortifier4) then
        call SetBuildAll( BUILD_UNIT, 4, 'h01D', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'o00W', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'h02R', -1 )
    if (gCond_Fortifier5) then
        call SetBuildAll( BUILD_UNIT, 5, 'h01D', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'h018', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'R00Q', -1 )
    if (gCond_Fortifier6) then
        call SetBuildAll( BUILD_UNIT, 6, 'h01D', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'e00G', -1 )
    if( bringWar ) then
    call SetBuildAll( BUILD_UNIT, 1, hero_id, -1 )
    endif
    if (gCond_Zealot1 and bringWar) then
        call SetBuildAll( BUILD_UNIT, 1, 'n00A', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 2, 'h02R', -1 )
    if (gCond_Fortifier7) then
        call SetBuildAll( BUILD_UNIT, 1, 'h02S', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'e00E', -1 )
    if (gCond_Zealot2 and bringWar) then
        call SetBuildAll( BUILD_UNIT, 2, 'n00A', -1 )
    endif
    if (gCond_Fortifier8) then
        call SetBuildAll( BUILD_UNIT, 2, 'h02S', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'h019', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'h02R', -1 )
    if (gCond_Fortifier9) then
        call SetBuildAll( BUILD_UNIT, 3, 'h02S', -1 )
    endif
    if (gCond_Fortifier10) then
        call SetBuildAll( BUILD_UNIT, 4, 'h02S', -1 )
    endif
    call SetBuildAll( BUILD_UPGRADE, 1, 'R00K', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'R00R', -1 )
    if( bringWar ) then
    if (gCond_BladeThrower1) then
        call SetBuildAll( BUILD_UNIT, 1, 'o00X', -1 )
    endif
    endif
    if (gCond_Fortifier11) then
        call SetBuildAll( BUILD_UNIT, 5, 'h02S', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 4, 'h02R', -1 )
    if( bringWar ) then
    if (gCond_Zealot3) then
        call SetBuildAll( BUILD_UNIT, 3, 'n00A', -1 )
    endif
    endif
    if (gCond_Fortifier12) then
        call SetBuildAll( BUILD_UNIT, 6, 'h02S', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 5, 'h02R', -1 )
    if (gCond_Fortifier13) then
        call SetBuildAll( BUILD_UNIT, 7, 'h02S', -1 )
    endif
    call SetBuildAll( BUILD_UPGRADE, 1, 'R00L', -1 )
    if (( GetUnitCount( 'h015' ) == 0 )) then
        call SetBuildAll( BUILD_UNIT, 1, 'h014', -1 )
    endif
    if( bringWar ) then
    if (gCond_BladeThrower2) then
        call SetBuildAll( BUILD_UNIT, 2, 'o00X', -1 )
    endif
    endif
    call SetBuildAll( BUILD_UNIT, 2, 'h018', -1 )
    if (gCond_Fortifier14) then
        call SetBuildAll( BUILD_UNIT, 8, 'h02S', -1 )
    endif
    if( bringWar ) then
    if (gCond_BladeThrower3) then
        call SetBuildAll( BUILD_UNIT, 3, 'o00X', -1 )
    endif
    endif
    call SetBuildAll( BUILD_UPGRADE, 1, 'R00J', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'e00E', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'R00X', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'e00H', -1 )
    if( bringWar ) then
    if (gCond_BladeThrower4) then
        call SetBuildAll( BUILD_UNIT, 4, 'o00X', -1 )
    endif
    if (gCond_ForgottenOne1) then
        call SetBuildAll( BUILD_UNIT, 1, 'n00B', -1 )
    endif
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'e00I', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'e00E', -1 )
    if( bringWar ) then
    if (gCond_OgreMauler1) then
        call SetBuildAll( BUILD_UNIT, 1, 'n00C', -1 )
    endif
    if (gCond_OgreSlinger1) then
        call SetBuildAll( BUILD_UNIT, 1, 'n00D', -1 )
    endif
    endif
    call SetBuildAll( BUILD_UPGRADE, 2, 'R00J', -1 )
    call BuildExpansion( 'h013', 'h013' )
    call SetBuildAll( BUILD_UNIT, 1, 'h013', 1 )
    if (gCond_Exp_1) then
        call SetBuildAll( BUILD_UNIT, 1, 'h01D', 1 )
    endif
    call SetBuildAll( BUILD_UPGRADE, 1, 'R00O', -1 )
    if( bringWar ) then
    if (gCond_OgreMauler2) then
        call SetBuildAll( BUILD_UNIT, 2, 'n00C', -1 )
    endif
    if (gCond_OgreSlinger2) then
        call SetBuildAll( BUILD_UNIT, 2, 'n00D', -1 )
    endif
    endif
    if (gCond_Exp_1) then
        call SetBuildAll( BUILD_UNIT, 2, 'h01D', 1 )
    endif
    if( bringWar ) then
    call SetBuildAll( BUILD_UNIT, 1, hero_id2, -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'e00F', 1 )
    call SetBuildAll( BUILD_UNIT, 4, 'e00E', -1 )
    if (gCond_Exp_1) then
        call SetBuildAll( BUILD_UNIT, 3, 'h01D', 1 )
    endif
    if (gCond_UnderAttack) then
        call SetBuildAll( BUILD_UNIT, 1, 'h016', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 5, 'e00E', -1 )
    if (gCond_UnderAttack) then
        call SetBuildAll( BUILD_UNIT, 2, 'h016', -1 )
    endif
    call SetBuildAll( BUILD_UPGRADE, 2, 'R00L', -1 )
    if (gCond_UnderAttack) then
        call SetBuildAll( BUILD_UNIT, 3, 'h016', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 3, 'h018', -1 )
    if (gCond_UnderAttack) then
        call SetBuildAll( BUILD_UNIT, 4, 'h016', -1 )
    endif
    call SetBuildAll( BUILD_UPGRADE, 1, 'R00P', -1 )
    if (gCond_UnderAttack) then
        call SetBuildAll( BUILD_UNIT, 5, 'h016', -1 )
    endif
    if( bringWar ) then
    if (gCond_OgreMauler3) then
        call SetBuildAll( BUILD_UNIT, 3, 'n00C', -1 )
    endif
    endif
    if (gCond_UnderAttack) then
        call SetBuildAll( BUILD_UNIT, 6, 'h016', -1 )
    endif
    if( bringWar ) then
    if (gCond_OgreSlinger3) then
        call SetBuildAll( BUILD_UNIT, 3, 'n00D', -1 )
    endif
    endif
    if (gCond_UnderAttack) then
        call SetBuildAll( BUILD_UNIT, 7, 'h016', -1 )
    endif
    if( bringWar ) then
    if (gCond_BloodMagi1) then
        call SetBuildAll( BUILD_UNIT, 1, 'n00F', -1 )
    endif
    endif
    if (gCond_UnderAttack) then
        call SetBuildAll( BUILD_UNIT, 8, 'h016', -1 )
    endif
    call SetBuildAll( BUILD_UPGRADE, 2, 'R00K', -1 )
    if (gCond_UnderAttack) then
        call SetBuildAll( BUILD_UNIT, 9, 'h016', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'h015', -1 )
    if (gCond_UnderAttack) then
        call SetBuildAll( BUILD_UNIT, 10, 'h016', -1 )
        call SetBuildAll( BUILD_UPGRADE, 1, 'R00S', -1 )
    endif
    call SetBuildAll( BUILD_UPGRADE, 1, 'R00T', -1 )
    if (gCond_UnderAttack) then
        call SetBuildAll( BUILD_UNIT, 11, 'h016', -1 )
    endif
    if( bringWar ) then
    if (gCond_BloodMagi2) then
        call SetBuildAll( BUILD_UNIT, 2, 'n00F', -1 )
    endif
    endif
    if (gCond_UnderAttack) then
        call SetBuildAll( BUILD_UNIT, 12, 'h016', -1 )
    endif
    if( bringWar ) then
    if (gCond_OgreMauler4) then
        call SetBuildAll( BUILD_UNIT, 4, 'n00C', -1 )
    endif
    endif
    if (gCond_UnderAttack) then
        call SetBuildAll( BUILD_UNIT, 13, 'h016', -1 )
    endif
    if( bringWar ) then
    if (gCond_OgreSlinger4) then
        call SetBuildAll( BUILD_UNIT, 4, 'n00D', -1 )
    endif
    endif
    if (gCond_UnderAttack) then
        call SetBuildAll( BUILD_UNIT, 14, 'h016', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'e00J', -1 )
    call SetBuildAll( BUILD_UNIT, 6, 'e00E', -1 )
    call SetBuildAll( BUILD_UNIT, 7, 'e00E', -1 )
    if( bringWar ) then
    if (gCond_SpellShifter1) then
        call SetBuildAll( BUILD_UNIT, 1, 'n00G', -1 )
    endif
    if (gCond_SpellShifter2) then
        call SetBuildAll( BUILD_UNIT, 2, 'n00G', -1 )
    endif
    endif
    call SetBuildAll( BUILD_UPGRADE, 3, 'R00J', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'R00M', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'R00Y', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'R00U', -1 )
    call SetBuildAll( BUILD_UPGRADE, 2, 'R00O', -1 )
    if( bringWar ) then
    call SetBuildAll( BUILD_UNIT, 1, 'n008', -1 )
    //call SetBuildAll( BUILD_UNIT, 1, 'n009', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'u00Z', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 8, 'e00E', -1 )
    call SetBuildAll( BUILD_UNIT, 9, 'e00E', -1 )
    call SetBuildAll( BUILD_UPGRADE, 3, 'R00L', -1 )
    call SetBuildAll( BUILD_UPGRADE, 2, 'R00M', -1 )
    call BuildExpansion( 'h013', 'h013' )
    call SetBuildAll( BUILD_UNIT, 1, 'e00F', 2 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'R00V', -1 )
    if( bringWar ) then
    call SetBuildAll( BUILD_UNIT, 2, 'u00Z', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'u00Z', -1 )
    if (gCond_SpellShifter3) then
        call SetBuildAll( BUILD_UNIT, 3, 'n00G', -1 )
    endif
    endif
    call SetBuildAll( BUILD_UNIT, 10, 'e00E', -1 )
    call SetBuildAll( BUILD_UNIT, 11, 'e00E', -1 )
    call SetBuildAll( BUILD_UPGRADE, 3, 'R00K', -1 )
    call SetBuildAll( BUILD_UPGRADE, 3, 'R00M', -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'h018', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'R00Z', -1 )
    call SetBuildAll( BUILD_UPGRADE, 2, 'R00P', -1 )
    if( bringWar ) then
    call SetBuildAll( BUILD_UNIT, 1, hero_id3, -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'u00Z', -1 )
    call SetBuildAll( BUILD_UNIT, 5, 'u00Z', -1 )
    endif
    //call SetBuildAll( BUILD_UNIT, 2, 'n009', -1 ) Chaos demon onhold
    call SetBuildAll( BUILD_UNIT, 12, 'e00E', -1 )
    call SetBuildAll( BUILD_UNIT, 13, 'e00E', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'R028', -1 )
    if( bringWar ) then
    call SetBuildAll( BUILD_UNIT, 6, 'u00Z', -1 )
    call SetBuildAll( BUILD_UNIT, 7, 'u00Z', -1 )
    if (gCond_ForgottenOne2) then
        call SetBuildAll( BUILD_UNIT, 2, 'n00B', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 8, 'u00Z', -1 )
    endif
    call SetBuildAll( BUILD_UPGRADE, 1, 'R00N', -1 )
    call SetBuildAll( BUILD_UNIT, 14, 'e00E', -1 )
    call SetBuildAll( BUILD_UNIT, 15, 'e00E', -1 )
    call SetBuildAll( BUILD_UNIT, 16, 'e00E', -1 )
    if( bringWar ) then
    call SetBuildAll( BUILD_UNIT, 9, 'u00Z', -1 )
    call SetBuildAll( BUILD_UNIT, 10, 'u00Z', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'n00E', -1 )
    endif
endfunction

//===========================================================================
// Specifies harvesting priorities for workers
//===========================================================================
function HarvestPriorities takes nothing returns nothing
    local integer mine = TownWithMine()
    local integer allGold = GetUnitCountDone('h01D')
    local integer allWood = GetUnitCountDone('h01D')
    local integer numWorkers
    set numWorkers = 3
    call HarvestGold( 0, numWorkers )
    set numWorkers = 7
    call HarvestWood( 0, numWorkers )
    set numWorkers = 3
    call HarvestGold( 1, numWorkers )
    set numWorkers = 4
    call HarvestWood( 0, numWorkers )
    set numWorkers = 5
    call HarvestWood( 1, numWorkers )
    if (gCond_Exp_2) then
        set numWorkers = 3
        call HarvestGold( 2, numWorkers )
    endif
    set numWorkers = 5
    call HarvestWood( 2, numWorkers )
    if (gCond_Exp_3) then
        set numWorkers = 3
        call HarvestGold( 3, numWorkers )
    endif
    set numWorkers = 5
    call HarvestWood( 3, numWorkers )
endfunction

//===========================================================================
// Determines all building and harvesting assignments for workers
//===========================================================================
function WorkerAssignment takes nothing returns nothing
    loop
        call UpdateConditions(  )

        // Harvesting
        call ClearHarvestAI(  )
        call HarvestPriorities(  )

        // Building
        call InitBuildArray(  )
        call BuildPriorities(  )

        call Sleep( 2 )
    endloop
endfunction

//***************************************************************************
//*
//*  Attacking
//*
//***************************************************************************

//===========================================================================
// Returns true if the minimum forces for an attack exist
//===========================================================================
function HaveMinimumAttackers takes nothing returns boolean
    local integer count

    // Check for attack wave limit
    if (attackWave > 1) then
        return false
    endif

    // Attack Group: All Units
    // No specific minimums exist, checking for at least one unit
    set count = 0
    set count = count + GetUnitCountDone('n00A')
    set count = count + GetUnitCountDone('o00X')
    set count = count + GetUnitCountDone('n008')
    set count = count + GetUnitCountDone(hero_id)
    set count = count + GetUnitCountDone(hero_id2)
    set count = count + GetUnitCountDone(hero_id3)
    set count = count + GetUnitCountDone('n009')
    set count = count + GetUnitCountDone('n00E')
    set count = count + GetUnitCountDone('n00F')
    set count = count + GetUnitCountDone('n00G')
    set count = count + GetUnitCountDone('n00C')
    set count = count + GetUnitCountDone('n00D')
    set count = count + GetUnitCountDone('u00Z')
    set count = count + GetUnitCountDone('n002')
    set count = count + GetUnitCountDone('o01F')
    set count = count + GetUnitCountDone('n023')
    set count = count + GetUnitCountDone('n024')
    set count = count + GetUnitCountDone('n025')
    set count = count + GetUnitCountDone('n026')
    set count = count + GetUnitCountDone('n02A')
    if (count < 1) then
        return false
    endif
    return true
endfunction

//===========================================================================
// Assigns units to attack based on the given attack group
//===========================================================================
function PrepareAttackGroup takes integer groupID returns nothing
    local integer all

    // Attack Group #1: All Units
    if (groupID == 1) then
        set all = GetUnitCountDone( 'n00A' )
        call AddAttackUnit( all, all, 'n00A' )
        set all = GetUnitCountDone( 'o00X' )
        call AddAttackUnit( all, all, 'o00X' )
        set all = GetUnitCountDone( 'n008' )
        call AddAttackUnit( all, all, 'n008' )
        set all = GetUnitCountDone( hero_id )
        call AddAttackUnit( all, all, hero_id )
        set all = GetUnitCountDone( hero_id2 )
        call AddAttackUnit( all, all, hero_id2 )
        set all = GetUnitCountDone( hero_id3 )
        call AddAttackUnit( all, all, hero_id3 )
        set all = GetUnitCountDone( 'n009' )
        call AddAttackUnit( all, all, 'n009' )
        set all = GetUnitCountDone( 'n00E' )
        call AddAttackUnit( all, all, 'n00E' )
        set all = GetUnitCountDone( 'n00F' )
        call AddAttackUnit( all, all, 'n00F' )
        set all = GetUnitCountDone( 'n00G' )
        call AddAttackUnit( all, all, 'n00G' )
        set all = GetUnitCountDone( 'n00C' )
        call AddAttackUnit( all, all, 'n00C' )
        set all = GetUnitCountDone( 'n00D' )
        call AddAttackUnit( all, all, 'n00D' )
        set all = GetUnitCountDone( 'u00Z' )
        call AddAttackUnit( all, all, 'u00Z' )
        set all = GetUnitCountDone( 'n002' )
        call AddAttackUnit( all, all, 'n002' )
        set all = GetUnitCountDone( 'o01F' )
        call AddAttackUnit( all, all, 'o01F' )
        set all = GetUnitCountDone( 'n023' )
        call AddAttackUnit( all, all, 'n023' )
        set all = GetUnitCountDone( 'n024' )
        call AddAttackUnit( all, all, 'n024' )
        set all = GetUnitCountDone( 'n025' )
        call AddAttackUnit( all, all, 'n025' )
        set all = GetUnitCountDone( 'n026' )
        call AddAttackUnit( all, all, 'n026' )
        set all = GetUnitCountDone( 'n02A' )
        call AddAttackUnit( all, all, 'n02A' )

        // Attack Group #2: Mini Attack Group X
    elseif (groupID == 2) then
        set all = GetUnitCountDone( hero_id )
        call AddAttackUnit( all, all, hero_id )
        set all = GetUnitCountDone( 'n00A' )
        call AddAttackUnit( all, all, 'n00A' )
        set all = GetUnitCountDone( 'o00X' )
        call AddAttackUnit( all, all, 'o00X' )

        // Attack Group #3: Minimum Attack Group
    elseif (groupID == 3) then
        set all = GetUnitCountDone( 'n00A' )
        call AddAttackUnit( all, all, 'n00A' )
        set all = GetUnitCountDone( 'o00X' )
        call AddAttackUnit( all, all, 'o00X' )
        set all = GetUnitCountDone( 'n008' )
        call AddAttackUnit( all, all, 'n008' )
        set all = GetUnitCountDone( hero_id )
        call AddAttackUnit( all, all, hero_id )
        set all = GetUnitCountDone( hero_id2 )
        call AddAttackUnit( all, all, hero_id2 )
        set all = GetUnitCountDone( hero_id3 )
        call AddAttackUnit( all, all, hero_id3 )
        set all = GetUnitCountDone( 'n009' )
        call AddAttackUnit( all, all, 'n009' )
        set all = GetUnitCountDone( 'n00E' )
        call AddAttackUnit( all, all, 'n00E' )
        set all = GetUnitCountDone( 'n00F' )
        call AddAttackUnit( all, all, 'n00F' )
        set all = GetUnitCountDone( 'n00G' )
        call AddAttackUnit( all, all, 'n00G' )
        set all = GetUnitCountDone( 'n00C' )
        call AddAttackUnit( all, all, 'n00C' )
        set all = GetUnitCountDone( 'n00D' )
        call AddAttackUnit( all, all, 'n00D' )
        set all = GetUnitCountDone( 'u00Z' )
        call AddAttackUnit( all, all, 'u00Z' )
        set all = GetUnitCountDone( 'n002' )
        call AddAttackUnit( all, all, 'n002' )
        set all = GetUnitCountDone( 'o01F' )
        call AddAttackUnit( all, all, 'o01F' )
        set all = GetUnitCountDone( 'n023' )
        call AddAttackUnit( all, all, 'n023' )
        set all = GetUnitCountDone( 'n024' )
        call AddAttackUnit( all, all, 'n024' )
        set all = GetUnitCountDone( 'n025' )
        call AddAttackUnit( all, all, 'n025' )
        set all = GetUnitCountDone( 'n026' )
        call AddAttackUnit( all, all, 'n026' )
        set all = GetUnitCountDone( 'n02A' )
        call AddAttackUnit( all, all, 'n02A' )

    endif
endfunction

//===========================================================================
// Prepares an attack group based on the current attack wave
//===========================================================================
function PrepareForces takes nothing returns nothing
    if (attackWave == 1) then
        call PrepareAttackGroup( 1 )
    endif
endfunction

//===========================================================================
// Sleep delays for each attack wave
//===========================================================================
function AttackWaveDelay takes integer inWave returns nothing
    if (inWave < nextDelay) then
        return
    endif

    set nextDelay = inWave + 1
endfunction

//===========================================================================
// Advances attack wave counter
//===========================================================================
function AttackWaveUpdate takes nothing returns nothing
    call AttackWaveDelay( attackWave )
    set attackWave = attackWave + 1
    if (attackWave > 1) then
        set attackWave = 1
        set nextDelay = attackWave + 1
    endif
endfunction

//===========================================================================
// Basic attack functionality
//===========================================================================
function AttackTarget takes unit target, boolean addAlliance returns nothing
    if (target == null) then
        return
    endif
    if (addAlliance) then
        call SetAllianceTarget( target )
    endif
    call FormGroup( 3, true )
    call AttackMoveKillA( target )
    if (not addAlliance) then
        call SetAllianceTarget( null )
    endif
endfunction

//===========================================================================
// Initiates an attack based on target priorities
//===========================================================================
function LaunchAttack takes nothing returns nothing
    local unit target = null
    local boolean setAlly = true

    // Don't launch any attack while town is threatened
    if (TownThreatened()) then
        call Sleep( 2 )
        return
    endif

    // Target Priority #1
    if (target == null) then
        set target = GetAllianceTarget()
        if (target != null) then
            set setAlly = false
        endif
    endif

    // Target Priority #2
    if (( ExpansionNeeded(  ) == true )) then
        if (target == null) then
            set target = GetExpansionFoe()
            if (target != null) then
                set take_exp = false
            endif
        endif

        // Target Priority #3
    endif
    if (( GetMinesOwned(  ) > 1 )) then
        if (target == null) then
            set target = GetMegaTarget()
        endif

        // Target Priority #4
    endif
    if (target == null) then
        set target = GetEnemyExpansion()
    endif

    // Target Priority #5
    if (target == null) then
        set target = GetEnemyExpansion()
        if (target == null) then
            call StartGetEnemyBase(  )
            loop
                exitwhen (not WaitGetEnemyBase())
                call SuicideSleep( 1 )
            endloop
            set target = GetEnemyBase()
        endif
    endif

    // Target Priority #6
    if (target == null) then
        set target = GetCreepCamp( 0, 9, false )
    endif

    // Target Priority #7
    if (target == null) then
        set target = GetCreepCamp( 10, 100, true )
    endif

    // Attack the target and increment attack wave
    if (target != null) then
        call AttackTarget( target, setAlly )
        call AttackWaveUpdate(  )
    else
        // If no target was found, sleep a bit before trying again
        call Sleep( 20 )
    endif
endfunction

//===========================================================================
// Determines all attacking assignments
//===========================================================================
function AttackAssignment takes nothing returns nothing
    call StaggerSleep( 0, 2 )
    if (attackWave == 1) then
        call AttackWaveDelay( 0 )
    endif
    loop
        loop
            call UpdateConditions(  )
            exitwhen (HaveMinimumAttackers() and not CaptainRetreating())
            call Sleep( 2 )
        endloop
        call RemoveInjuries(  )
        call ResetAttackUnits(  )
        call PrepareForces(  )
        call LaunchAttack(  )
    endloop
endfunction

//***************************************************************************
//*
//*  Main Entry Point
//*
//***************************************************************************

//===========================================================================
function main takes nothing returns nothing
    call InitAI(  )
    call InitOptions(  )
    call SelectHeroes(  )
    call CreateCaptains(  )
    call SetHeroLevels( function ChooseHeroSkill )

    call Sleep( 0.1 )
    call StartThread( function WorkerAssignment )
    call StartThread( function AttackAssignment )
    call PlayGame(  )
endfunction

